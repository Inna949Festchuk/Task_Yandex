# Опишите словами алгоритм решения задачи
# Ввод: натуральное число n
# Вывод: количество простых чисел строго меньше n
# Решение должно быть вычислительно-эффективным

'''Поиск простых чисел'''
nn = input('Введите натуральное число: ')
lpn = []
for n in range(2, int(nn)):
    if int(n) == 2:
        prime_number = n
    for k in range(2, int(n)): # составное число
        if int(n) % k == 0:
            prime_number = None
            break
        elif int(n) % k != 0: # простое число
            prime_number = n
    lpn.append(prime_number)        
print(f'Последовательность простых чисел:\n{lpn}', 
      f'\nКоличество простых чисел до {nn} равно: ' 
      f'{sum(map(lambda item: item != None, lpn))}')

# Ввод: натуральное число N
# Решение: (поиск простых чисел P строго меньше N)
#     Для чисел S в диапазоне от 2 до N
#         Если S равно 2 присвоить переменной P
#         Для делителей K в диапазоне от 2 до корень из N
#             Если S делится на K без остатка присвоить P None и прервать цикл
#             Иначе если S делится на K с остатком присвоить P число S (простое число)
#     Добавить P в массив (список)
# Возврат: число элементов в массиве не равных Null - простых чисел P